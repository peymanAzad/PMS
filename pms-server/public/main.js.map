{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/account.service.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routing.module.ts","webpack:///./src/app/auth-guard.service.ts","webpack:///./src/app/header/header.component.css","webpack:///./src/app/header/header.component.html","webpack:///./src/app/header/header.component.ts","webpack:///./src/app/location/location.component.css","webpack:///./src/app/location/location.component.html","webpack:///./src/app/location/location.component.ts","webpack:///./src/app/log-in/log-in.component.css","webpack:///./src/app/log-in/log-in.component.html","webpack:///./src/app/log-in/log-in.component.ts","webpack:///./src/app/map/map.component.css","webpack:///./src/app/map/map.component.html","webpack:///./src/app/map/map.component.ts","webpack:///./src/app/menu/menu.component.css","webpack:///./src/app/menu/menu.component.html","webpack:///./src/app/menu/menu.component.ts","webpack:///./src/app/order.model.ts","webpack:///./src/app/orders.service.ts","webpack:///./src/app/orders/order/confirm-delete-dialog/confirm-delete-dialog.component.css","webpack:///./src/app/orders/order/confirm-delete-dialog/confirm-delete-dialog.component.html","webpack:///./src/app/orders/order/confirm-delete-dialog/confirm-delete-dialog.component.ts","webpack:///./src/app/orders/order/order.component.css","webpack:///./src/app/orders/order/order.component.html","webpack:///./src/app/orders/order/order.component.ts","webpack:///./src/app/orders/order/sent-report-dialog/sent-report-dialog.component.css","webpack:///./src/app/orders/order/sent-report-dialog/sent-report-dialog.component.html","webpack:///./src/app/orders/order/sent-report-dialog/sent-report-dialog.component.ts","webpack:///./src/app/orders/orders.component.css","webpack:///./src/app/orders/orders.component.html","webpack:///./src/app/orders/orders.component.ts","webpack:///./src/app/parking.model.ts","webpack:///./src/app/parking/parking.component.css","webpack:///./src/app/parking/parking.component.html","webpack:///./src/app/parking/parking.component.ts","webpack:///./src/app/parkings.service.ts","webpack:///./src/app/parkings/parking-item/parking-item.component.css","webpack:///./src/app/parkings/parking-item/parking-item.component.html","webpack:///./src/app/parkings/parking-item/parking-item.component.ts","webpack:///./src/app/parkings/parking-search.pipe.ts","webpack:///./src/app/parkings/parkings.component.css","webpack:///./src/app/parkings/parkings.component.html","webpack:///./src/app/parkings/parkings.component.ts","webpack:///./src/app/payment-result/payment-result.component.css","webpack:///./src/app/payment-result/payment-result.component.html","webpack:///./src/app/payment-result/payment-result.component.ts","webpack:///./src/app/payment/payment.component.css","webpack:///./src/app/payment/payment.component.html","webpack:///./src/app/payment/payment.component.ts","webpack:///./src/app/price/price.component.css","webpack:///./src/app/price/price.component.html","webpack:///./src/app/price/price.component.ts","webpack:///./src/app/profile/profile.component.css","webpack:///./src/app/profile/profile.component.html","webpack:///./src/app/profile/profile.component.ts","webpack:///./src/app/profile/updated-message-dialog/updated-message-dialog.component.css","webpack:///./src/app/profile/updated-message-dialog/updated-message-dialog.component.html","webpack:///./src/app/profile/updated-message-dialog/updated-message-dialog.component.ts","webpack:///./src/app/register/register.component.css","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.ts","webpack:///./src/app/reservation.service.ts","webpack:///./src/app/reservation/reservation.component.css","webpack:///./src/app/reservation/reservation.component.html","webpack:///./src/app/reservation/reservation.component.ts","webpack:///./src/app/search/search.component.css","webpack:///./src/app/search/search.component.html","webpack:///./src/app/search/search.component.ts","webpack:///./src/app/services.service.ts","webpack:///./src/app/services/services.component.css","webpack:///./src/app/services/services.component.html","webpack:///./src/app/services/services.component.ts","webpack:///./src/app/time-picker/time-picker.component.css","webpack:///./src/app/time-picker/time-picker.component.html","webpack:///./src/app/time-picker/time-picker.component.ts","webpack:///./src/app/user.model.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\nimport {Subject} from 'rxjs';\nimport {User} from './user.model';\nimport {Order} from './order.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AccountService {\n  users: Subject<User[]>;\n  private userList: User[];\n  user: Subject<User>;\n\n  constructor() {\n    this.users = new Subject<User[]>();\n    this.user = new Subject<User>();\n    this.userList = [new User('test@test.com', '123', 'pazad', 123,\n      'Isfahan with honor', '12b12434')];\n  }\n\n  Add(user: User) {\n    this.userList.push(user);\n    this.users.next(this.userList);\n    this.user.next(user);\n    this.saveUser(user);\n  }\n\n  UpdateCurrentUser(user: User) {\n    const current = this.GetCurrentUser();\n    this.saveUser(user);\n    for (let i = 0; i < this.userList.length; ++i) {\n      const u = this.userList[i];\n      if (u.email === current.email) {\n        this.userList[i] = new User(user.email, user.password, user.name, user.phone, user.city, user.licensePlate);\n      }\n    }\n    this.user.next(user);\n  }\n\n  Authenticate(user: {email: string, password: string}): boolean {\n    for (let model of this.userList) {\n      if (model.email === user.email && model.password === user.password) {\n        this.user.next(model);\n        this.saveUser(model);\n        return true;\n      }\n    }\n    return false;\n  }\n\n  Logout() {\n    localStorage.removeItem('user');\n    this.user.next(null);\n  }\n\n  private saveUser(user: User) {\n    localStorage.setItem('user', JSON.stringify(user));\n  }\n\n  public AddOrderToCurrentUser(order: Order): Order[] {\n    const user = JSON.parse(localStorage.getItem('user')) as User;\n    user.orders.push(order);\n    this.saveUser(user);\n    return user.orders;\n  }\n\n  public GetCurrentUser(): User {\n    return JSON.parse(localStorage.getItem('user')) as User;\n  }\n}\n","module.exports = \"\"","module.exports = \"<app-header></app-header>\\n<div class=\\\"container\\\">\\n  <router-outlet></router-outlet>\\n</div>\\n\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { LogInComponent } from './log-in/log-in.component';\nimport { MenuComponent } from './menu/menu.component';\nimport { MapComponent } from './map/map.component';\nimport { LocationComponent } from './location/location.component';\nimport { TimePickerComponent } from './time-picker/time-picker.component';\nimport { SearchComponent } from './search/search.component';\nimport { ServicesComponent } from './services/services.component';\nimport { PriceComponent } from './price/price.component';\nimport { PaymentComponent } from './payment/payment.component';\nimport { PaymentResultComponent } from './payment-result/payment-result.component';\nimport { ParkingComponent } from './parking/parking.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { OrdersComponent } from './orders/orders.component';\nimport { OrderComponent } from './orders/order/order.component';\nimport { HeaderComponent } from './header/header.component';\nimport { ReservationComponent } from './reservation/reservation.component';\nimport { ParkingsComponent } from './parkings/parkings.component';\nimport {AppRoutingModule} from './app.routing.module';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport {\n  MatButtonModule, MatCardModule, MatCheckboxModule, MatDialogModule, MatDividerModule, MatExpansionModule, MatFormField,\n  MatFormFieldModule, MatInput,\n  MatInputModule, MatRadioModule\n} from '@angular/material';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport { RegisterComponent } from './register/register.component';\nimport {FormsModule} from '@angular/forms';\nimport {AccountService} from './account.service';\nimport { ConfirmDeleteDialogComponent } from './orders/order/confirm-delete-dialog/confirm-delete-dialog.component';\nimport { SentReportDialogComponent } from './orders/order/sent-report-dialog/sent-report-dialog.component';\nimport { ParkingItemComponent } from './parkings/parking-item/parking-item.component';\nimport {ParkingSearchPipe} from './parkings/parking-search.pipe';\nimport { UpdatedMessageDialogComponent } from './profile/updated-message-dialog/updated-message-dialog.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LogInComponent,\n    MenuComponent,\n    MapComponent,\n    LocationComponent,\n    TimePickerComponent,\n    SearchComponent,\n    ServicesComponent,\n    PriceComponent,\n    PaymentComponent,\n    PaymentResultComponent,\n    ParkingComponent,\n    ProfileComponent,\n    OrdersComponent,\n    OrderComponent,\n    HeaderComponent,\n    ReservationComponent,\n    ParkingsComponent,\n    RegisterComponent,\n    ConfirmDeleteDialogComponent,\n    SentReportDialogComponent,\n    ParkingItemComponent,\n    ParkingSearchPipe,\n    UpdatedMessageDialogComponent\n  ],\n  entryComponents: [ConfirmDeleteDialogComponent, SentReportDialogComponent, UpdatedMessageDialogComponent],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    BrowserAnimationsModule,\n    NgbModule.forRoot(),\n    MatFormFieldModule,\n    MatInputModule,\n    MatCardModule,\n    MatButtonModule,\n    MatDividerModule,\n    MatCheckboxModule,\n    MatRadioModule,\n    MatExpansionModule,\n    MatDialogModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {LogInComponent} from './log-in/log-in.component';\r\nimport {MenuComponent} from './menu/menu.component';\r\nimport {LocationComponent} from './location/location.component';\r\nimport {TimePickerComponent} from './time-picker/time-picker.component';\r\nimport {SearchComponent} from './search/search.component';\r\nimport {ReservationComponent} from './reservation/reservation.component';\r\nimport {ServicesComponent} from './services/services.component';\r\nimport {PaymentComponent} from './payment/payment.component';\r\nimport {PaymentResultComponent} from './payment-result/payment-result.component';\r\nimport {ProfileComponent} from './profile/profile.component';\r\nimport {OrdersComponent} from './orders/orders.component';\r\nimport {ParkingsComponent} from './parkings/parkings.component';\r\nimport {ParkingComponent} from './parking/parking.component';\r\nimport {RegisterComponent} from './register/register.component';\r\nimport {AuthGuard} from './auth-guard.service';\r\n\r\nconst routes: Routes = [\r\n  {path: 'login', component: LogInComponent},\r\n  {path: 'register', component: RegisterComponent},\r\n  {path: 'menu', canActivate: [AuthGuard], component: MenuComponent},\r\n  {path: 'location', canActivate: [AuthGuard], component: LocationComponent},\r\n  {path: 'time', canActivate: [AuthGuard], component: TimePickerComponent},\r\n  {path: 'search', canActivate: [AuthGuard], component: SearchComponent},\r\n  {path: 'reservation/:id', canActivate: [AuthGuard], component: ReservationComponent, children:\r\n      [\r\n        {path: 'services', component: ServicesComponent},\r\n        {path: 'payment', component: PaymentComponent},\r\n        {path: 'result', component: PaymentResultComponent},\r\n        {path: 'time', component: TimePickerComponent}\r\n      ]\r\n  },\r\n  {path: 'parkings', canActivate: [AuthGuard], component: ParkingsComponent},\r\n  {path: 'parking', canActivate: [AuthGuard], component: ParkingComponent},\r\n  {path: 'profile', canActivate: [AuthGuard], component: ProfileComponent},\r\n  {path: 'orders', canActivate: [AuthGuard], component: OrdersComponent}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Injectable } from '@angular/core';\nimport {ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot} from '@angular/router';\nimport {Observable} from 'rxjs';\nimport {User} from './user.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate{\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n    const userJson = localStorage.getItem('user');\n    if (userJson) {\n      const user: User = JSON.parse(userJson);\n      if (user.email && user.password) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  constructor() { }\n}\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-expand-sm navbar-dark bg-primary mb-3\\\">\\n  <a class=\\\"navbar-brand\\\" routerLink=\\\"/menu\\\"><img width=\\\"35\\\" src=\\\"data:image/svg+xml;utf8;base64,PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iaXNvLTg4NTktMSI/Pgo8IS0tIEdlbmVyYXRvcjogQWRvYmUgSWxsdXN0cmF0b3IgMTkuMC4wLCBTVkcgRXhwb3J0IFBsdWctSW4gLiBTVkcgVmVyc2lvbjogNi4wMCBCdWlsZCAwKSAgLS0+CjxzdmcgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB4bWxuczp4bGluaz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayIgdmVyc2lvbj0iMS4xIiBpZD0iQ2FwYV8xIiB4PSIwcHgiIHk9IjBweCIgdmlld0JveD0iMCAwIDUxMiA1MTIiIHN0eWxlPSJlbmFibGUtYmFja2dyb3VuZDpuZXcgMCAwIDUxMiA1MTI7IiB4bWw6c3BhY2U9InByZXNlcnZlIiB3aWR0aD0iNTEycHgiIGhlaWdodD0iNTEycHgiPgo8Zz4KCTxnPgoJCTxwYXRoIGQ9Ik0yNTYsNTkuNzMzYy03NS4yODEsMC0xMzYuNTMzLDYxLjI1Mi0xMzYuNTMzLDEzNi41MzNTMTgwLjcxOSwzMzIuOCwyNTYsMzMyLjhzMTM2LjUzMy02MS4yNTIsMTM2LjUzMy0xMzYuNTMzICAgIFMzMzEuMjgxLDU5LjczMywyNTYsNTkuNzMzeiBNMjczLjA2NywyMjEuODY3aC0yNS42VjI4MS42YzAsNC43MS0zLjgyMyw4LjUzMy04LjUzMyw4LjUzM0gyMDQuOGMtNC43MSwwLTguNTMzLTMuODIzLTguNTMzLTguNTMzICAgIFYxMTAuOTMzYzAtNC43MSwzLjgyMy04LjUzMyw4LjUzMy04LjUzM2g2OC4yNjdjMzIuOTM5LDAsNTkuNzMzLDI2Ljc5NSw1OS43MzMsNTkuNzMzUzMwNi4wMDUsMjIxLjg2NywyNzMuMDY3LDIyMS44Njd6IiBmaWxsPSIjRDgwMDI3Ii8+Cgk8L2c+CjwvZz4KPGc+Cgk8Zz4KCQk8cGF0aCBkPSJNNDUyLjI2NywyMDYuNTA3QzQ1Mi4yNjcsOTIuNjM4LDM2NC4yMiwwLDI1NiwwUzU5LjczMyw5Mi42MzgsNTkuNzMzLDIwNi41MDdjMCwxMDYuMDc4LDE2NC43NjIsMjc3LjEyOSwxODcuNzMzLDMwMC40NjcgICAgdi04MC4zMDdjMC00LjcxLDMuODIzLTguNTMzLDguNTMzLTguNTMzYzQuNzEsMCw4LjUzMywzLjgyMyw4LjUzMyw4LjUzM3Y4MC4zMDdDMjg3LjUwNSw0ODMuNjM1LDQ1Mi4yNjcsMzEyLjU4NSw0NTIuMjY3LDIwNi41MDcgICAgeiBNMjU2LDM0OS44NjdjLTg0LjY5MywwLTE1My42LTY4LjkwNy0xNTMuNi0xNTMuNnM2OC45MDctMTUzLjYsMTUzLjYtMTUzLjZzMTUzLjYsNjguOTA3LDE1My42LDE1My42ICAgIFMzNDAuNjkzLDM0OS44NjcsMjU2LDM0OS44Njd6IiBmaWxsPSIjRDgwMDI3Ii8+Cgk8L2c+CjwvZz4KPGc+Cgk8Zz4KCQk8cGF0aCBkPSJNMjczLjA2NywxMzYuNTMzaC0zNC4xMzNjLTQuNzEsMC04LjUzMywzLjgyMy04LjUzMyw4LjUzM1YxNzkuMmMwLDQuNzEsMy44MjMsOC41MzMsOC41MzMsOC41MzNoMzQuMTMzICAgIGMxNC4xMTQsMCwyNS42LTExLjQ4NiwyNS42LTI1LjZTMjg3LjE4MSwxMzYuNTMzLDI3My4wNjcsMTM2LjUzM3oiIGZpbGw9IiNEODAwMjciLz4KCTwvZz4KPC9nPgo8Zz4KCTxnPgoJCTxwYXRoIGQ9Ik01MDMuNDY3LDQ5NC45MzNoLTM0LjEzM2MtNC43MSwwLTguNTMzLDMuODIzLTguNTMzLDguNTMzczMuODIzLDguNTMzLDguNTMzLDguNTMzaDM0LjEzMyAgICBjNC43MSwwLDguNTMzLTMuODIzLDguNTMzLTguNTMzUzUwOC4xNzcsNDk0LjkzMyw1MDMuNDY3LDQ5NC45MzN6IiBmaWxsPSIjRDgwMDI3Ii8+Cgk8L2c+CjwvZz4KPGc+Cgk8Zz4KCQk8cGF0aCBkPSJNMjA0LjgsNDk0LjkzM0g4LjUzM2MtNC43MSwwLTguNTMzLDMuODIzLTguNTMzLDguNTMzUzMuODIzLDUxMiw4LjUzMyw1MTJIMjA0LjhjNC43MSwwLDguNTMzLTMuODIzLDguNTMzLTguNTMzICAgIFMyMDkuNTEsNDk0LjkzMywyMDQuOCw0OTQuOTMzeiIgZmlsbD0iI0Q4MDAyNyIvPgoJPC9nPgo8L2c+CjxnPgoJPGc+CgkJPHBhdGggZD0iTTQwOS42LDQ5NC45MzNIMzA3LjJjLTQuNzEsMC04LjUzMywzLjgyMy04LjUzMyw4LjUzM1MzMDIuNDksNTEyLDMwNy4yLDUxMmgxMDIuNGM0LjcxLDAsOC41MzMtMy44MjMsOC41MzMtOC41MzMgICAgUzQxNC4zMSw0OTQuOTMzLDQwOS42LDQ5NC45MzN6IiBmaWxsPSIjRDgwMDI3Ii8+Cgk8L2c+CjwvZz4KPGc+CjwvZz4KPGc+CjwvZz4KPGc+CjwvZz4KPGc+CjwvZz4KPGc+CjwvZz4KPGc+CjwvZz4KPGc+CjwvZz4KPGc+CjwvZz4KPGc+CjwvZz4KPGc+CjwvZz4KPGc+CjwvZz4KPGc+CjwvZz4KPGc+CjwvZz4KPGc+CjwvZz4KPGc+CjwvZz4KPC9zdmc+Cg==\\\" />PMS</a>\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" (click)=\\\"isNavbarCollapsed = !isNavbarCollapsed\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n\\n  <div [ngbCollapse]=\\\"isNavbarCollapsed\\\" class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\n      <li class=\\\"nav-item active\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/menu\\\">Home <span class=\\\"sr-only\\\">(current)</span></a>\\n      </li>\\n    </ul>\\n    <ul class=\\\"navbar-nav ml-auto\\\">\\n      <span *ngIf=\\\"user\\\" class=\\\"navbar-text\\\">\\n      Hello {{user.name}}!\\n    </span>\\n      <li *ngIf=\\\"user else notuser\\\" class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" style=\\\"cursor: pointer;\\\" (click)=\\\"onLogout()\\\">Logout</a>\\n      </li>\\n      <ng-template #notuser>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" routerLink=\\\"/login\\\">Login</a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" routerLink=\\\"/register\\\">Register</a>\\n        </li>\\n      </ng-template>\\n    </ul>\\n  </div>\\n</nav>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {User} from '../user.model';\nimport {AccountService} from '../account.service';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n  user: User;\n  isNavbarCollapsed = true;\n  constructor(private accountService: AccountService, private router: Router) {}\n\n  ngOnInit() {\n    this.accountService.user.subscribe((user: User) => {\n      this.user = user;\n    });\n  }\n\n  onLogout() {\n    this.accountService.Logout();\n    this.router.navigate(['/login']);\n  }\n\n}\n","module.exports = \"\\r\\n\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-xl-7 col-lg-8 col-md-10 m-auto\\\">\\n    <mat-card class=\\\"card text-center\\\">\\n      <h3 class=\\\"text-center\\\">Choose Your Destination</h3>\\n      <mat-divider></mat-divider>\\n      <mat-card-content class=\\\"card-body\\\">\\n        <div class=\\\"embed-responsive embed-responsive-4by3\\\">\\n          <iframe class=\\\"embed-responsive-item\\\" src=\\\"https://www.google.com/maps/embed?pb=!1m10!1m8!1m3!1d52869.26897917222!2d49.72938869067385!3d34.08670333028641!3m2!1i1024!2i768!4f13.1!5e0!3m2!1sen!2snl!4v1527091081894\\\" width=\\\"600\\\" height=\\\"450\\\" frameborder=\\\"0\\\" style=\\\"border:0\\\" allowfullscreen></iframe>\\n        </div>\\n      </mat-card-content>\\n      <mat-card-footer>\\n        <button mat-button mat-raised-button color=\\\"primary\\\" (click)=\\\"onClickChoose()\\\">Choose</button>\\n      </mat-card-footer>\\n    </mat-card>\\n  </div>\\n</div>\\n<img src=\\\"data:image/svg+xml;utf8;base64,PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iaXNvLTg4NTktMSI/Pgo8IS0tIEdlbmVyYXRvcjogQWRvYmUgSWxsdXN0cmF0b3IgMTkuMC4wLCBTVkcgRXhwb3J0IFBsdWctSW4gLiBTVkcgVmVyc2lvbjogNi4wMCBCdWlsZCAwKSAgLS0+CjxzdmcgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB4bWxuczp4bGluaz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayIgdmVyc2lvbj0iMS4xIiBpZD0iTGF5ZXJfMSIgeD0iMHB4IiB5PSIwcHgiIHZpZXdCb3g9IjAgMCA1MTIgNTEyIiBzdHlsZT0iZW5hYmxlLWJhY2tncm91bmQ6bmV3IDAgMCA1MTIgNTEyOyIgeG1sOnNwYWNlPSJwcmVzZXJ2ZSIgd2lkdGg9IjUxMnB4IiBoZWlnaHQ9IjUxMnB4Ij4KPGc+Cgk8Zz4KCQk8cGF0aCBkPSJNMjU2LDBDMTUzLjc1NSwwLDcwLjU3Myw4My4xODIsNzAuNTczLDE4NS40MjZjMCwxMjYuODg4LDE2NS45MzksMzEzLjE2NywxNzMuMDA0LDMyMS4wMzUgICAgYzYuNjM2LDcuMzkxLDE4LjIyMiw3LjM3OCwyNC44NDYsMGM3LjA2NS03Ljg2OCwxNzMuMDA0LTE5NC4xNDcsMTczLjAwNC0zMjEuMDM1QzQ0MS40MjUsODMuMTgyLDM1OC4yNDQsMCwyNTYsMHogTTI1NiwyNzguNzE5ICAgIGMtNTEuNDQyLDAtOTMuMjkyLTQxLjg1MS05My4yOTItOTMuMjkzUzIwNC41NTksOTIuMTM0LDI1Niw5Mi4xMzRzOTMuMjkxLDQxLjg1MSw5My4yOTEsOTMuMjkzUzMwNy40NDEsMjc4LjcxOSwyNTYsMjc4LjcxOXoiIGZpbGw9IiNEODAwMjciLz4KCTwvZz4KPC9nPgo8Zz4KPC9nPgo8Zz4KPC9nPgo8Zz4KPC9nPgo8Zz4KPC9nPgo8Zz4KPC9nPgo8Zz4KPC9nPgo8Zz4KPC9nPgo8Zz4KPC9nPgo8Zz4KPC9nPgo8Zz4KPC9nPgo8Zz4KPC9nPgo8Zz4KPC9nPgo8Zz4KPC9nPgo8Zz4KPC9nPgo8Zz4KPC9nPgo8L3N2Zz4K\\\" style=\\\"position: relative; top: -14em; left: 48%; width:3rem;\\\"/>\\n\\n\\n\\n\\n\"","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-location',\n  templateUrl: './location.component.html',\n  styleUrls: ['./location.component.css']\n})\nexport class LocationComponent implements OnInit {\n  constructor(private router: Router) { }\n\n  ngOnInit() {\n\n  }\n\n  onClickChoose() {\n    this.router.navigate(['/time']);\n  }\n}\n","module.exports = \".wrapper {\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n}\\r\\n\\r\\n.wrapper > * {\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.error-msg{\\r\\n  margin-bottom: 1rem;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-md-8 col-lg-6 mx-auto\\\">\\n    <mat-card class=\\\"card card-body\\\">\\n      <h3 class=\\\"text-center\\\">Login Account</h3>\\n      <form (ngSubmit)=\\\"onSubmit(frm)\\\" #frm=\\\"ngForm\\\">\\n        <div class=\\\"wrapper\\\">\\n          <mat-form-field>\\n            <input name=\\\"email\\\" email type=\\\"email\\\" matInput placeholder=\\\"Email\\\" required ngModel #email=\\\"ngModel\\\">\\n          </mat-form-field>\\n          <small *ngIf=\\\"email.invalid && (email.dirty || email.touched)\\\"\\n                 class=\\\"text-danger error-msg\\\">\\n\\n            <div *ngIf=\\\"email.errors.required\\\">\\n              Email is required.\\n            </div>\\n            <div *ngIf=\\\"email.errors.email\\\">\\n              Email is not valid.\\n            </div>\\n          </small>\\n          <mat-form-field>\\n            <input name=\\\"password\\\" type=\\\"password\\\" matInput placeholder=\\\"Password\\\" required ngModel #password=\\\"ngModel\\\">\\n          </mat-form-field>\\n          <small *ngIf=\\\"password.invalid && (password.dirty || password.touched)\\\"\\n                 class=\\\"text-danger error-msg\\\">\\n            <div *ngIf=\\\"password.errors.required\\\">\\n              Password is required.\\n            </div>\\n          </small>\\n          <ul *ngIf=\\\"errorMessages\\\">\\n            <li class=\\\"text-danger\\\" *ngFor=\\\"let error of errorMessages\\\"><small>{{error}}</small></li>\\n          </ul>\\n        </div>\\n        <button id=\\\"login\\\" class=\\\"btn btn-primary\\\" type=\\\"submit\\\" [disabled]=\\\"frm.invalid\\\">Login</button>\\n      </form>\\n    </mat-card>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {NgForm} from '@angular/forms';\nimport {AccountService} from '../account.service';\nimport {User} from '../user.model';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-log-in',\n  templateUrl: './log-in.component.html',\n  styleUrls: ['./log-in.component.css']\n})\nexport class LogInComponent implements OnInit {\n  errorMessages: String[];\n\n  constructor(private accountService: AccountService, private router: Router) { }\n\n  ngOnInit() {\n    this.errorMessages = [];\n  }\n  onSubmit(frm: NgForm) {\n    const result = this.accountService.Authenticate({email: frm.value.email, password: frm.value.password});\n    if (result) {\n      this.router.navigate(['/menu']);\n    } else {\n      this.errorMessages.push('wrong username or password');\n    }\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  map works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-map',\n  templateUrl: './map.component.html',\n  styleUrls: ['./map.component.css']\n})\nexport class MapComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"button{\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-lg-6 col-md-8 col-sm-10 m-auto\\\">\\n    <mat-card class=\\\"card text-center\\\">\\n      <h3 class=\\\"text-center\\\">Menu</h3>\\n      <mat-divider></mat-divider>\\n      <mat-card-content class=\\\"card-body\\\">\\n        <div>\\n          <button mat-button color=\\\"primary\\\" (click)=\\\"onClickMap()\\\">Map</button>\\n        </div>\\n        <div>\\n          <button mat-button color=\\\"primary\\\" (click)=\\\"onClickParkings()\\\">Parkings</button>\\n        </div>\\n        <div>\\n          <button mat-button color=\\\"primary\\\" (click)=\\\"onClickOrders()\\\">Orders</button>\\n        </div>\\n        <div>\\n          <button mat-button color=\\\"primary\\\" (click)=\\\"onClickProfile()\\\">Profile</button>\\n        </div>\\n      </mat-card-content>\\n    </mat-card>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.css']\n})\nexport class MenuComponent implements OnInit {\n\n  constructor(private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  onClickMap() {\n    this.router.navigate(['/location']);\n  }\n  onClickProfile() {\n    this.router.navigate(['/profile']);\n  }\n  onClickOrders() {\n    this.router.navigate(['/orders']);\n  }\n  onClickParkings() {\n    this.router.navigate(['parkings']);\n  }\n}\n","import {Service} from './parking.model';\r\n\r\nexport class Order {\r\n  date: Date;\r\n  isActivate: boolean;\r\n  constructor(public parkingIndex: number, public services: Service[], public paymentType: string,\r\n              public when: {hour, minute}, public howLong: {hour, minute}) {\r\n    this.date = new Date();\r\n    this.isActivate = true;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport {AccountService} from './account.service';\nimport {Order} from './order.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrdersService {\n  orderList: Order[];\n\n  constructor(private userService: AccountService) {\n    this.orderList = this.userService.GetCurrentUser().orders;\n  }\n\n  getUserOrdres(): Order[] {\n    return this.orderList.slice();\n  }\n\n  addOrderToUser(order: Order) {\n    const orders = this.userService.AddOrderToCurrentUser(order);\n    this.orderList = orders;\n  }\n}\n","module.exports = \"\"","module.exports = \"<h1 mat-dialog-title>Are You Sure?</h1>\\n<div mat-dialog-content>\\n  <p>Are you sure about canceling the reservation?</p>\\n</div>\\n<div mat-dialog-actions>\\n  <button mat-button (click)=\\\"onNoClick()\\\">No</button>\\n  <button mat-button color=\\\"warn\\\" [mat-dialog-close]=\\\"true\\\" cdkFocusInitial>Yes I'm sure</button>\\n</div>\\n\"","import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material';\n\n@Component({\n  selector: 'app-confirm-delete-dialog',\n  templateUrl: './confirm-delete-dialog.component.html',\n  styleUrls: ['./confirm-delete-dialog.component.css']\n})\nexport class ConfirmDeleteDialogComponent {\n\n  constructor(\n    public dialogRef: MatDialogRef<ConfirmDeleteDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any) { }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n}\n","module.exports = \".example-headers-align .mat-expansion-panel-header-title,\\r\\n.example-headers-align .mat-expansion-panel-header-description {\\r\\n  flex-basis: 0;\\r\\n}\\r\\n\\r\\n.example-headers-align .mat-expansion-panel-header-description {\\r\\n  justify-content: space-between;\\r\\n  align-items: center;\\r\\n}\\r\\n\\r\\n.report{\\r\\n  width: 100%;\\r\\n}\\r\\n\"","module.exports = \"<mat-card class=\\\"card-body\\\">\\n  <mat-card-content>\\n    <h5>{{parking.name}} {{data.when.hour}}: {{data.when.minute}} <small [ngClass]=\\\"{'text-success': data.isActivate, 'text-danger': !data.isActivate}\\\">{{data.isActivate? 'active': 'canceled'}}</small></h5>\\n    <h6>for {{data.howLong.hour}} hours and {{data.howLong.minute}} minutes</h6>\\n    <p>{{parking.address}}</p>\\n    <button mat-button color=\\\"warn\\\" *ngIf=\\\"data.isActivate\\\" (click)=\\\"openConfirmDialog()\\\">Cancel</button>\\n    <mat-accordion class=\\\"example-headers-align\\\" *ngIf=\\\"data.isActivate\\\">\\n      <mat-expansion-panel [expanded]=\\\"step === 1\\\" (opened)=\\\"setStep(1)\\\" hideToggle=\\\"true\\\">\\n        <mat-expansion-panel-header>\\n          <mat-panel-title>\\n            Report\\n          </mat-panel-title>\\n          <mat-panel-description>\\n            Type your report for guards\\n          </mat-panel-description>\\n        </mat-expansion-panel-header>\\n\\n        <mat-form-field class=\\\"report\\\">\\n          <textarea matInput rows=\\\"8\\\" placeholder=\\\"Report Details\\\"></textarea>\\n        </mat-form-field>\\n\\n        <mat-action-row>\\n          <button mat-button color=\\\"primary\\\" (click)=\\\"openSentDialog()\\\">Send</button>\\n        </mat-action-row>\\n      </mat-expansion-panel>\\n\\n    </mat-accordion>\\n\\n  </mat-card-content>\\n</mat-card>\\n\"","import {Component, Input, OnInit} from '@angular/core';\nimport {Order} from '../../order.model';\nimport {ParkingsService} from '../../parkings.service';\nimport {Parking} from '../../parking.model';\nimport {ConfirmDeleteDialogComponent} from './confirm-delete-dialog/confirm-delete-dialog.component';\nimport {MatDialog} from '@angular/material';\nimport {SentReportDialogComponent} from './sent-report-dialog/sent-report-dialog.component';\n\n@Component({\n  selector: 'app-order',\n  templateUrl: './order.component.html',\n  styleUrls: ['./order.component.css']\n})\nexport class OrderComponent implements OnInit {\n  @Input('data') data: Order;\n  parking: Parking;\n  step = 0;\n\n  constructor(private parkingService: ParkingsService, public dialog: MatDialog) { }\n\n  ngOnInit() {\n    this.parking = this.parkingService.get(this.data.parkingIndex);\n  }\n  setStep(index: number) {\n    this.step = index;\n  }\n\n  openConfirmDialog(): void {\n    const dialogRef = this.dialog.open(ConfirmDeleteDialogComponent, {\n      width: '400px',\n      data: { }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      this.data.isActivate = !result;\n    });\n  }\n  openSentDialog(): void {\n    const dialogRef = this.dialog.open(SentReportDialogComponent, {\n      width: '300px',\n      data: { }\n    });\n  }\n}\n","module.exports = \"\"","module.exports = \"<h1 mat-dialog-title class=\\\"text-success\\\">Sent</h1>\\n<div mat-dialog-content>\\n  <p>Your report sent to related guards</p>\\n</div>\\n<div mat-dialog-actions>\\n  <button mat-button (click)=\\\"onNoClick()\\\">Ok</button>\\n</div>\\n\"","import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material';\n\n@Component({\n  selector: 'app-sent-report-dialog',\n  templateUrl: './sent-report-dialog.component.html',\n  styleUrls: ['./sent-report-dialog.component.css']\n})\nexport class SentReportDialogComponent {\n\n  constructor(\n    public dialogRef: MatDialogRef<SentReportDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any) { }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n}\n","module.exports = \"\"","module.exports = \"<h3>Orders List</h3>\\n<app-order *ngFor=\\\"let order of orders;\\\" [data]=\\\"order\\\"></app-order>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {OrdersService} from '../orders.service';\nimport {Order} from '../order.model';\n\n@Component({\n  selector: 'app-orders',\n  templateUrl: './orders.component.html',\n  styleUrls: ['./orders.component.css']\n})\nexport class OrdersComponent implements OnInit {\n  orders: Order[];\n\n  constructor(private orderService: OrdersService) {\n    this.orders = this.orderService.getUserOrdres();\n  }\n\n  ngOnInit() {\n  }\n\n}\n","export class Parking {\r\n  constructor(public name: String, public numbers: Number[], public address: String, public pricePerHour: Number) {}\r\n}\r\n\r\nexport class Service {\r\n  constructor(public name: String, public description: String, public price: Number) {}\r\n}\r\n","module.exports = \"mat-card{\\r\\n  padding: 0;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"row\\\" style=\\\"margin-bottom: 15px;\\\">\\n  <div class=\\\"col-lg-6 col-md-8 col-sm-10\\\">\\n    <mat-card>\\n      <mat-card-content class=\\\"card-body\\\">\\n        <h5>{{data.name}}</h5>\\n        <p>{{data.address}} | #{{data.numbers[1]}} <button mat-button color=\\\"primary\\\" (click)=\\\"onClickReserve()\\\">Reserve</button></p>\\n        Price/Hour: {{data.pricePerHour | currency}}\\n      </mat-card-content>\\n    </mat-card>\\n  </div>\\n</div>\\n\\n\"","import {Component, Input, OnInit} from '@angular/core';\nimport {Parking} from '../parking.model';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-parking',\n  templateUrl: './parking.component.html',\n  styleUrls: ['./parking.component.css']\n})\nexport class ParkingComponent implements OnInit {\n  @Input('data') data: Parking;\n  @Input('index') index: Number;\n\n  constructor(private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  onClickReserve() {\n    this.router.navigate(['/reservation', this.index, 'services']);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {Parking} from './parking.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ParkingsService {\n  parkingList: Parking[];\n  constructor() {\n    this.parkingList = [\n      new Parking('sample', [1, 2, 3], 'sample street, sample name', 10),\n      new Parking('foo', [1, 2, 3], 'foo avenue, bar street, foobar name', 5)\n    ];\n  }\n  search() {\n    return this.parkingList.slice();\n  }\n  get(index): Parking {\n    return this.parkingList[index];\n  }\n  searchByName(name: string) {\n    return this.parkingList.reduce((acc, current) => {\n      if (name === '') {\n        return [...acc, current];\n      }\n      if (current.name.includes(name)) {\n        return [...acc, current];\n      }\n      return [...acc];\n    }, []);\n  }\n}\n","module.exports = \"mat-card{\\r\\n  padding: 0;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"row\\\" style=\\\"margin-bottom: 15px;\\\">\\n  <div class=\\\"col-lg-6 col-md-8 col-sm-10\\\">\\n    <mat-card>\\n      <mat-card-content class=\\\"card-body\\\">\\n        <h5>{{data.name}}</h5>\\n        <p>{{data.address}} <button mat-button color=\\\"primary\\\" (click)=\\\"onClickReserve()\\\">Reserve</button></p>\\n        Price/Hour: {{data.pricePerHour | currency}}\\n      </mat-card-content>\\n    </mat-card>\\n  </div>\\n</div>\\n\\n\"","import {Component, Input, OnInit} from '@angular/core';\nimport {Parking} from '../../parking.model';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-parking-item',\n  templateUrl: './parking-item.component.html',\n  styleUrls: ['./parking-item.component.css']\n})\nexport class ParkingItemComponent implements OnInit {\n  @Input('data') data: Parking;\n  @Input('index') index: Number;\n\n  constructor(private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  onClickReserve() {\n    this.router.navigate(['/reservation', this.index, 'time']);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport {Parking} from '../parking.model';\n\n@Pipe({\n  name: 'parkingSearch'\n})\nexport class ParkingSearchPipe implements PipeTransform {\n\n  transform(parkings: Parking[], name: string): Parking[] {\n    if (!name) return parkings;\n    return parkings.filter(parking => parking.name.includes(name));\n  }\n\n}\n","module.exports = \".wrapper {\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n}\\r\\n\\r\\n.wrapper > * {\\r\\n  width: 100%;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"wrapper\\\">\\n  <mat-form-field>\\n    <input name=\\\"search\\\" email type=\\\"text\\\" matInput placeholder=\\\"Search...\\\" (keypress)=\\\"onChangeSearch(search)\\\" #search>\\n  </mat-form-field>\\n</div>\\n<app-parking-item *ngFor=\\\"let parking of (parkings | parkingSearch: search.value); let i = index\\\" [data]=\\\"parking\\\" [index]=\\\"i\\\"></app-parking-item>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {ParkingsService} from '../parkings.service';\nimport {Parking} from '../parking.model';\n\n@Component({\n  selector: 'app-parkings',\n  templateUrl: './parkings.component.html',\n  styleUrls: ['./parkings.component.css']\n})\nexport class ParkingsComponent implements OnInit {\n  parkings: Parking[] = [];\n\n  constructor(private parkingService: ParkingsService) {\n  }\n\n  ngOnInit() {\n    this.parkings = this.parkingService.parkingList;\n  }\n\n  onChangeSearch(input) {\n    this.parkings = this.parkingService.searchByName(input.value);\n  }\n}\n","module.exports = \"\"","module.exports = \"<div *ngIf=\\\"order.services.length\\\">\\n  <h5>Services</h5>\\n  <ul>\\n    <li *ngFor=\\\"let service of order.services\\\">{{service.name}} {{service.price | currency}}</li>\\n  </ul>\\n</div>\\n<hr *ngIf=\\\"order.services.length\\\">\\n<h3 class=\\\"text-success\\\">\\n  Payment Successful!\\n</h3>\\n<p>Your receipt Id is 123456</p>\\n<button mat-button mat-raised-button color=\\\"primary\\\" (click)=\\\"onClickBack()\\\">Back to menu</button>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {OrdersService} from '../orders.service';\nimport {Order} from '../order.model';\nimport {Router} from '@angular/router';\nimport {ReservationService} from '../reservation.service';\n\n@Component({\n  selector: 'app-payment-result',\n  templateUrl: './payment-result.component.html',\n  styleUrls: ['./payment-result.component.css']\n})\nexport class PaymentResultComponent implements OnInit {\n  order: Order;\n\n  constructor(private ordersService: OrdersService, private router: Router, private reservationService: ReservationService) {\n    this.order = this.ordersService.getUserOrdres()[this.ordersService.getUserOrdres().length - 1];\n  }\n\n  ngOnInit() {\n  }\n\n  onClickBack() {\n    this.reservationService.reset();\n    this.router.navigate(['/menu']);\n  }\n}\n","module.exports = \".example-h2 {\\r\\n  margin: 10px;\\r\\n}\\r\\n\\r\\n.example-section {\\r\\n  display: flex;\\r\\n  align-content: center;\\r\\n  align-items: center;\\r\\n  height: 60px;\\r\\n}\\r\\n\\r\\n.example-margin {\\r\\n  margin: 0 10px;\\r\\n}\\r\\n\"","module.exports = \"<div *ngIf=\\\"reservation.services.length\\\">\\n  <h5>Services</h5>\\n  <ul>\\n    <li *ngFor=\\\"let service of reservation.services\\\">{{service.name}} {{service.price | currency}}</li>\\n  </ul>\\n</div>\\n<hr *ngIf=\\\"reservation.services.length\\\">\\n<div>\\n  <p>Total price {{totalPrice | currency}}</p>\\n  <h3 class=\\\"example-h2\\\">Select Payment Type</h3>\\n    <section class=\\\"example-section\\\">\\n      <mat-radio-group [(ngModel)]=\\\"labelPosition\\\">\\n        <mat-radio-button class=\\\"example-margin\\\" value=\\\"Bank Portal\\\">Bank Portal</mat-radio-button>\\n        <mat-radio-button class=\\\"example-margin\\\" value=\\\"Wallet\\\">Wallet</mat-radio-button>\\n      </mat-radio-group>\\n    </section>\\n    <button mat-button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"!labelPosition\\\" (click)=\\\"onClickPay()\\\">Pay</button>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {ReservationService} from '../reservation.service';\nimport {ActivatedRoute, Params, Router} from '@angular/router';\nimport {Parking} from '../parking.model';\nimport {ParkingsService} from '../parkings.service';\nimport {OrdersService} from '../orders.service';\nimport {Order} from '../order.model';\n\n@Component({\n  selector: 'app-payment',\n  templateUrl: './payment.component.html',\n  styleUrls: ['./payment.component.css']\n})\nexport class PaymentComponent implements OnInit {\n  reservation;\n  parking: Parking;\n  labelPosition;\n  parkingIndex: number;\n  totalPrice: number;\n\n  constructor(private reservationService: ReservationService, private route: ActivatedRoute,\n              private parkingService: ParkingsService, private orderService: OrdersService,\n              private router: Router) {\n    this.reservation = this.reservationService.getData();\n    this.route.parent.params.subscribe((params: Params) => {\n      this.parkingIndex = params['id'] as number;\n      this.parking = this.parkingService.get(params['id'] as Number);\n      let price = (<number>this.parking.pricePerHour * (this.reservation.howLong.hour + this.reservation.howLong.minute / 60));\n      price += this.reservation.services.reduce((acc, current) => {return current.price + acc; }, 0);\n      this.totalPrice = price;\n    });\n  }\n\n  ngOnInit() {\n  }\n\n  onClickPay() {\n    if (!this.labelPosition) { return; }\n    const order = new Order(this.parkingIndex, this.reservation.services, this.labelPosition, this.reservation.when, this.reservation.howLong);\n    this.orderService.addOrderToUser(order);\n    this.router.navigate(['..', 'result'], {relativeTo: this.route});\n  }\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  price works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-price',\n  templateUrl: './price.component.html',\n  styleUrls: ['./price.component.css']\n})\nexport class PriceComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".wrapper {\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n}\\r\\n\\r\\n.wrapper > * {\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.error-msg{\\r\\n  margin-bottom: 1rem;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-md-8 col-lg-6 mx-auto\\\">\\n    <mat-card class=\\\"card card-body\\\">\\n      <h3 class=\\\"text-center\\\">Register Account</h3>\\n      <form (ngSubmit)=\\\"onSubmit(frm)\\\" #frm=\\\"ngForm\\\">\\n        <div class=\\\"wrapper\\\">\\n          <mat-form-field>\\n            <input name=\\\"email\\\" email type=\\\"email\\\" matInput placeholder=\\\"Email\\\" required [(ngModel)]=\\\"model.email\\\" #email=\\\"ngModel\\\">\\n          </mat-form-field>\\n          <small *ngIf=\\\"email.invalid && (email.dirty || email.touched)\\\"\\n                 class=\\\"text-danger error-msg\\\">\\n\\n            <div *ngIf=\\\"email.errors.required\\\">\\n              Email is required.\\n            </div>\\n            <div *ngIf=\\\"email.errors.email\\\">\\n              Email is not valid.\\n            </div>\\n          </small>\\n          <mat-form-field>\\n            <input name=\\\"password\\\" type=\\\"password\\\" matInput placeholder=\\\"Password\\\" required [(ngModel)]=\\\"model.password\\\" #password=\\\"ngModel\\\">\\n          </mat-form-field>\\n          <small *ngIf=\\\"password.invalid && (password.dirty || password.touched)\\\"\\n                 class=\\\"text-danger error-msg\\\">\\n            <div *ngIf=\\\"password.errors.required\\\">\\n              Password is required.\\n            </div>\\n          </small>\\n          <mat-form-field>\\n            <input name=\\\"confirmPassword\\\" type=\\\"password\\\" matInput placeholder=\\\"Confirm Password\\\" required ngModel>\\n          </mat-form-field>\\n          <mat-form-field>\\n            <input name=\\\"name\\\" type=\\\"text\\\" matInput placeholder=\\\"Name\\\" required [(ngModel)]=\\\"model.name\\\" #name=\\\"ngModel\\\">\\n          </mat-form-field>\\n          <small *ngIf=\\\"name.invalid && (name.dirty || name.touched)\\\"\\n                 class=\\\"text-danger error-msg\\\">\\n            <div *ngIf=\\\"name.errors.required\\\">\\n              Name is required.\\n            </div>\\n          </small>\\n          <mat-form-field>\\n            <input name=\\\"city\\\" type=\\\"text\\\" matInput placeholder=\\\"city\\\" required [(ngModel)]=\\\"model.city\\\" #city=\\\"ngModel\\\">\\n          </mat-form-field>\\n          <small *ngIf=\\\"city.invalid && (city.dirty || city.touched)\\\"\\n                 class=\\\"text-danger error-msg\\\">\\n            <div *ngIf=\\\"city.errors.required\\\">\\n              City is required.\\n            </div>\\n          </small>\\n          <mat-form-field>\\n            <input name=\\\"phone\\\" type=\\\"number\\\" matInput placeholder=\\\"phone\\\" required [(ngModel)]=\\\"model.phone\\\" #phone=\\\"ngModel\\\">\\n          </mat-form-field>\\n          <small *ngIf=\\\"phone.invalid && (phone.dirty || phone.touched)\\\"\\n                 class=\\\"text-danger error-msg\\\">\\n            <div *ngIf=\\\"phone.errors.required\\\">\\n              Phone is required.\\n            </div>\\n          </small>\\n          <mat-form-field>\\n            <input name=\\\"licensePlate\\\" type=\\\"text\\\" matInput placeholder=\\\"License Plate\\\" required [(ngModel)]=\\\"model.licensePlate\\\" #license=\\\"ngModel\\\">\\n          </mat-form-field>\\n          <small *ngIf=\\\"license.invalid && (license.dirty || license.touched)\\\"\\n                 class=\\\"text-danger error-msg\\\">\\n            <div *ngIf=\\\"license.errors.required\\\">\\n              License Plate is required.\\n            </div>\\n          </small>\\n          <ul *ngIf=\\\"errorMessages\\\">\\n            <li class=\\\"text-danger\\\" *ngFor=\\\"let error of errorMessages\\\"><small>{{error}}</small></li>\\n          </ul>\\n        </div>\\n        <button id=\\\"login\\\" class=\\\"btn btn-primary\\\" type=\\\"submit\\\" [disabled]=\\\"frm.invalid\\\">Update</button>\\n      </form>\\n    </mat-card>\\n  </div>\\n</div>\\n\"","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {User} from '../user.model';\nimport {NgForm, NgModel} from '@angular/forms';\nimport {AccountService} from '../account.service';\nimport {MatDialog} from '@angular/material';\nimport {SentReportDialogComponent} from '../orders/order/sent-report-dialog/sent-report-dialog.component';\nimport {UpdatedMessageDialogComponent} from './updated-message-dialog/updated-message-dialog.component';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n  @ViewChild('frm') frm: NgForm;\n  model: User;\n\n  errorMessages: String[];\n\n  constructor(private accountService: AccountService, public dialog: MatDialog) {\n    this.model = new User('', '', '', '', '', '');\n  }\n\n  ngOnInit() {\n    this.errorMessages = [];\n    this.model = this.accountService.GetCurrentUser();\n    // this.frm.setValue({email: user.email});\n    //   = {\n    //   email: user.email,\n    //   password: user.password,\n    //   name: user.name,\n    //   phone: user.phone,\n    //   city: user.city,\n    //   licensePlate: user.licensePlate\n    // };\n  }\n  onSubmit(frm: NgForm) {\n    console.log(frm);\n    if (frm.value.password !== frm.value.confirmPassword) {\n      this.errorMessages.push('Password and Confirm Password don\\'t match');\n      return;\n    }\n    this.accountService.UpdateCurrentUser(new User(frm.value.email, frm.value.password, frm.value.name,\n      frm.value.phone, frm.value.city, frm.value.licensePlate));\n    this.openDialog();\n  }\n  openDialog(): void {\n    const dialogRef = this.dialog.open(UpdatedMessageDialogComponent, {\n      width: '300px',\n      data: { }\n    });\n  };\n}\n","module.exports = \"\"","module.exports = \"<h1 mat-dialog-title class=\\\"text-success\\\">Profile Updated</h1>\\n<div mat-dialog-content>\\n  <p>Your profile updated successfully</p>\\n</div>\\n<div mat-dialog-actions>\\n  <button mat-button (click)=\\\"onNoClick()\\\">Ok</button>\\n</div>\\n\"","import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material';\nimport {SentReportDialogComponent} from '../../orders/order/sent-report-dialog/sent-report-dialog.component';\n\n@Component({\n  selector: 'app-updated-message-dialog',\n  templateUrl: './updated-message-dialog.component.html',\n  styleUrls: ['./updated-message-dialog.component.css']\n})\nexport class UpdatedMessageDialogComponent {\n\n  constructor(\n    public dialogRef: MatDialogRef<UpdatedMessageDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any) { }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n}\n","module.exports = \".wrapper {\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n}\\r\\n\\r\\n.wrapper > * {\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.error-msg{\\r\\n  margin-bottom: 1rem;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-md-8 col-lg-6 mx-auto\\\">\\n    <mat-card class=\\\"card card-body\\\">\\n      <h3 class=\\\"text-center\\\">Register Account</h3>\\n      <form (ngSubmit)=\\\"onSubmit(frm)\\\" #frm=\\\"ngForm\\\">\\n        <div class=\\\"wrapper\\\">\\n          <mat-form-field>\\n            <input name=\\\"email\\\" email type=\\\"email\\\" matInput placeholder=\\\"Email\\\" required ngModel #email=\\\"ngModel\\\">\\n          </mat-form-field>\\n          <small *ngIf=\\\"email.invalid && (email.dirty || email.touched)\\\"\\n               class=\\\"text-danger error-msg\\\">\\n\\n            <div *ngIf=\\\"email.errors.required\\\">\\n              Email is required.\\n            </div>\\n            <div *ngIf=\\\"email.errors.email\\\">\\n              Email is not valid.\\n            </div>\\n          </small>\\n          <mat-form-field>\\n            <input name=\\\"password\\\" type=\\\"password\\\" matInput placeholder=\\\"Password\\\" required ngModel #password=\\\"ngModel\\\">\\n          </mat-form-field>\\n          <small *ngIf=\\\"password.invalid && (password.dirty || password.touched)\\\"\\n                 class=\\\"text-danger error-msg\\\">\\n            <div *ngIf=\\\"password.errors.required\\\">\\n              Password is required.\\n            </div>\\n          </small>\\n          <mat-form-field>\\n            <input name=\\\"confirmPassword\\\" type=\\\"password\\\" matInput placeholder=\\\"Confirm Password\\\" required ngModel>\\n          </mat-form-field>\\n          <mat-form-field>\\n            <input name=\\\"name\\\" type=\\\"text\\\" matInput placeholder=\\\"Name\\\" required ngModel #name=\\\"ngModel\\\">\\n          </mat-form-field>\\n          <small *ngIf=\\\"name.invalid && (name.dirty || name.touched)\\\"\\n                 class=\\\"text-danger error-msg\\\">\\n            <div *ngIf=\\\"name.errors.required\\\">\\n              Name is required.\\n            </div>\\n          </small>\\n          <mat-form-field>\\n            <input name=\\\"city\\\" type=\\\"text\\\" matInput placeholder=\\\"city\\\" required ngModel #city=\\\"ngModel\\\">\\n          </mat-form-field>\\n          <small *ngIf=\\\"city.invalid && (city.dirty || city.touched)\\\"\\n                 class=\\\"text-danger error-msg\\\">\\n            <div *ngIf=\\\"city.errors.required\\\">\\n              City is required.\\n            </div>\\n          </small>\\n          <mat-form-field>\\n            <input name=\\\"phone\\\" type=\\\"number\\\" matInput placeholder=\\\"phone\\\" required ngModel #phone=\\\"ngModel\\\">\\n          </mat-form-field>\\n          <small *ngIf=\\\"phone.invalid && (phone.dirty || phone.touched)\\\"\\n                 class=\\\"text-danger error-msg\\\">\\n            <div *ngIf=\\\"phone.errors.required\\\">\\n              Phone is required.\\n            </div>\\n          </small>\\n          <mat-form-field>\\n            <input name=\\\"licensePlate\\\" type=\\\"text\\\" matInput placeholder=\\\"License Plate\\\" required ngModel #license=\\\"ngModel\\\">\\n          </mat-form-field>\\n          <small *ngIf=\\\"license.invalid && (license.dirty || license.touched)\\\"\\n                 class=\\\"text-danger error-msg\\\">\\n            <div *ngIf=\\\"license.errors.required\\\">\\n              License Plate is required.\\n            </div>\\n          </small>\\n          <ul *ngIf=\\\"errorMessages\\\">\\n            <li class=\\\"text-danger\\\" *ngFor=\\\"let error of errorMessages\\\"><small>{{error}}</small></li>\\n          </ul>\\n        </div>\\n        <button id=\\\"login\\\" class=\\\"btn btn-primary\\\" type=\\\"submit\\\" [disabled]=\\\"frm.invalid\\\">Register</button>\\n      </form>\\n    </mat-card>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {NgForm} from '@angular/forms';\nimport {AccountService} from '../account.service';\nimport {User} from '../user.model';\nimport {ActivatedRoute, Router} from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  errorMessages: String[];\n\n  constructor(private accountService: AccountService, private router: Router) { }\n\n  ngOnInit() {\n    this.errorMessages = [];\n  }\n  onSubmit(frm: NgForm) {\n   if (frm.value.password !== frm.value.confirmPassword) {\n     this.errorMessages.push('Password and Confirm Password don\\'t match');\n     return;\n   }\n   this.accountService.Add(new User(frm.value.email, frm.value.password, frm.value.name,\n     frm.value.phone, frm.value.city, frm.value.licensePlate));\n   this.router.navigate(['/menu']);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {Service} from './parking.model';\nimport {Subject} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ReservationService {\n  private when: {hour: Number, minute: Number};\n  private howLong: {hour: Number, minute: Number};\n  private services: Service[];\n\n  public dataChange: Subject<{when: {hour, minute}, howLong: {hour, minute}, services: Service[]}>;\n\n  constructor() {\n    this.dataChange = new Subject<{when: {hour, minute}, howLong: {hour, minute}, services: Service[]}>();\n    this.reset();\n  }\n\n  reset() {\n    this.when = {hour: 0, minute: 0};\n    this.howLong = {hour: 0, minute: 0};\n    this.services = [];\n  }\n\n  public getData(): {when: {hour, minute}, howLong: {hour, minute}, services: Service[]} {\n    return {when: this.when, howLong: this.howLong, services: this.services};\n  }\n  setHour(when: {hour: Number, minute: Number}, howLong: {hour: Number, minute: Number}) {\n    this.when = {hour: when.hour, minute: when.minute};\n    this.howLong = {hour: howLong.hour, minute: howLong.minute};\n    this.next();\n  }\n  setService(services: Service[]) {\n    this.services = [\n      ...this.services,\n      ...services\n    ];\n    this.next();\n  }\n  private next() {\n    this.dataChange.next(this.getData());\n  }\n}\n","module.exports = \"\"","module.exports = \"<div>\\n  <h4>{{parking.name}}</h4>\\n  <p>{{parking.address}} #{{parking.numbers[1]}}</p>\\n  Price: {{(parking.pricePerHour * (data.howLong.hour + data.howLong.minute / 60)) | currency }}\\n</div>\\n<hr>\\n<router-outlet></router-outlet>\\n\"","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {ActivatedRoute, Params} from '@angular/router';\nimport {ParkingsService} from '../parkings.service';\nimport {Parking} from '../parking.model';\nimport {ReservationService} from '../reservation.service';\nimport {Subscription} from 'rxjs';\n\n@Component({\n  selector: 'app-reservation',\n  templateUrl: './reservation.component.html',\n  styleUrls: ['./reservation.component.css']\n})\nexport class ReservationComponent implements OnInit, OnDestroy {\n  parking: Parking;\n  reservationSubscription: Subscription;\n  data;\n\n  constructor(private parkingService: ParkingsService, private route: ActivatedRoute, private reservationService: ReservationService) {\n    this.route.params.subscribe((params: Params) => {\n      this.parking = this.parkingService.get(params['id'] as Number);\n    });\n    this.reservationSubscription = this.reservationService.dataChange.subscribe((data) => {\n      this.data = data;\n    });\n  }\n\n  ngOnInit() {\n    this.data = this.reservationService.getData();\n  }\n  ngOnDestroy(): void {\n    this.reservationSubscription.unsubscribe();\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<h4>Search Result</h4>\\n<app-parking *ngFor=\\\"let parking of result; let i = index\\\" [data]=\\\"parking\\\" [index]=\\\"i\\\"></app-parking>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {ParkingsService} from '../parkings.service';\nimport {Parking} from '../parking.model';\n\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.css']\n})\nexport class SearchComponent implements OnInit {\n  result: Parking[];\n\n  constructor(private parkingService: ParkingsService) { }\n\n  ngOnInit() {\n    this.result = this.parkingService.search();\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {Service} from './parking.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ServicesService {\n  servicesList: Service[];\n\n  constructor() {\n    this.servicesList = [\n      new Service('Car Wash', 'Washing your car when parking', 25),\n      new Service('Balance', 'Balancing your ring when parking', 12)\n    ];\n  }\n  getAll() {\n    return this.servicesList.slice();\n  }\n  get(index) {\n    return this.servicesList[index];\n  }\n}\n","module.exports = \"\"","module.exports = \"<h3>Need some service?</h3>\\n<br>\\n<div class=\\\"row\\\" style=\\\"margin-bottom: 20px;\\\">\\n  <div class=\\\"col-xs-6 col-sm-4 col-lg-3\\\" *ngFor=\\\"let service of services; let i = index\\\">\\n    <mat-card>\\n      <mat-card-header>\\n        <mat-card-title><mat-checkbox (change)=\\\"onChangeServie($event, service)\\\">{{service.name}}</mat-checkbox></mat-card-title>\\n      </mat-card-header>\\n      <mat-card-content>\\n        <p>{{service.description}}</p>\\n        Price: {{service.price | currency}}\\n      </mat-card-content>\\n    </mat-card>\\n  </div>\\n</div>\\n<button mat-button mat-raised-button color=\\\"primary\\\" (click)=\\\"onClickNext()\\\">Next</button>\\n\"","import {Component, OnChanges, OnInit} from '@angular/core';\nimport {ServicesService} from '../services.service';\nimport {Service} from '../parking.model';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {ReservationService} from '../reservation.service';\nimport {MatCheckboxChange} from '@angular/material';\nimport {PlatformLocation} from '@angular/common';\n\n@Component({\n  selector: 'app-services',\n  templateUrl: './services.component.html',\n  styleUrls: ['./services.component.css']\n})\nexport class ServicesComponent implements OnInit {\n  services: Service[];\n  private selectedService: Service[] = [];\n\n  constructor(private servicesServie: ServicesService, private router: Router, private route: ActivatedRoute,\n              private reservationService: ReservationService) {\n  }\n\n  ngOnInit() {\n    this.services = this.servicesServie.getAll();\n  }\n\n  onChangeServie(event: MatCheckboxChange, service: Service) {\n    if (event.checked) {\n      this.selectedService.push(service);\n    } else {\n      for (let i = 0; i < this.selectedService.length; ++i) {\n        const s = this.selectedService[i];\n        if (s.name === service.name) {\n          this.selectedService.splice(i, 1);\n        }\n      }\n    }\n  }\n\n  onClickNext() {\n    this.reservationService.setService(this.selectedService);\n    this.router.navigate(['..', 'payment'], {relativeTo: this.route});\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-lg-6 col-md-8 col-sm-10 m-auto\\\">\\n    <mat-card>\\n      <mat-card-content class=\\\"card-body\\\">\\n        <h5>When?</h5>\\n        <ngb-timepicker [(ngModel)]=\\\"time1\\\"></ngb-timepicker>\\n        <hr>\\n        <h5>How Long?</h5>\\n        <ngb-timepicker [(ngModel)]=\\\"time2\\\"></ngb-timepicker>\\n        <br>\\n        <button mat-button mat-raised-button color=\\\"primary\\\" (click)=\\\"onClickNext()\\\">Next</button>\\n      </mat-card-content>\\n    </mat-card>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {ReservationService} from '../reservation.service';\n\n@Component({\n  selector: 'app-time-picker',\n  templateUrl: './time-picker.component.html',\n  styleUrls: ['./time-picker.component.css']\n})\nexport class TimePickerComponent implements OnInit {\n  time1 = {hour: new Date().getHours(), minute: new Date().getMinutes()};\n  time2 = {hour: 1, minute: 0};\n\n  constructor(private router: Router, private reservationService: ReservationService, private route: ActivatedRoute) { }\n\n  ngOnInit() {\n  }\n\n  onClickNext() {\n    this.reservationService.setHour(this.time1, this.time2);\n    if (this.route.parent.snapshot.params['id']) {\n      this.router.navigate(['..', 'services'], {relativeTo: this.route});\n      return;\n    }\n    this.router.navigate(['/search']);\n  }\n}\n","import {Order} from './order.model';\r\n\r\nexport class User {\r\n  orders: Order[];\r\n  constructor (public email: String, public password: String, public name, public phone, public city, public licensePlate) {\r\n    this.orders  = [];\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nimport 'hammerjs';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}